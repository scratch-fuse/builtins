module motion {
  extern moveSteps = {
    "opcode": "motion_movesteps",
    "type": "void",
    "args": [
      {
        "name": "STEPS",
        "type": "any"
      }
    ]
  }
  extern turnRight = {
    "opcode": "motion_turnright",
    "type": "void",
    "args": [
      {
        "name": "DEGREES",
        "type": "any"
      }
    ]
  }
  extern turnLeft = {
    "opcode": "motion_turnleft",
    "type": "void",
    "args": [
      {
        "name": "DEGREES",
        "type": "any"
      }
    ]
  }
  extern goTo = {
    "opcode": "motion_goto",
    "type": "void",
    "args": [
      {
        "name": "TO",
        "type": "any"
      }
    ]
  }
  extern setXY = {
    "opcode": "motion_gotoxy",
    "type": "void",
    "args": [
      {
        "name": "X",
        "type": "any"
      },
      {
        "name": "Y",
        "type": "any"
      }
    ]
  }
  // Note: TO: _mouse_ or _random_
  extern glideTo = {
    "opcode": "motion_glideto",
    "type": "void",
    "args": [
      {
        "name": "SECS",
        "type": "any"
      },
      {
        "name": "TO",
        "type": "any"
      }
    ]
  }
  extern glide = {
    "opcode": "motion_glidesecstoxy",
    "type": "void",
    "args": [
      {
        "name": "SECS",
        "type": "any"
      },
      {
        "name": "X",
        "type": "any"
      },
      {
        "name": "Y",
        "type": "any"
      }
    ]
  }
  extern pointInDirection = {
    "opcode": "motion_pointindirection",
    "type": "void",
    "args": [
      {
        "name": "DIRECTION",
        "type": "any"
      }
    ]
  }
  // Note: TOWARDS: _random_, _mouse_
  extern pointTowards = {
    "opcode": "motion_pointtowards",
    "type": "void",
    "args": [
      {
        "name": "TOWARDS",
        "type": "any"
      }
    ]
  }
  extern changeX = {
    "opcode": "motion_changexby",
    "type": "void",
    "args": [
      {
        "name": "DX",
        "type": "any"
      }
    ]
  }
  extern setX = {
    "opcode": "motion_setx",
    "type": "void",
    "args": [
      {
        "name": "X",
        "type": "any"
      }
    ]
  }
  extern changeY = {
    "opcode": "motion_changeyby",
    "type": "void",
    "args": [
      {
        "name": "DY",
        "type": "any"
      }
    ]
  }
  extern setY = {
    "opcode": "motion_sety",
    "type": "void",
    "args": [
      {
        "name": "Y",
        "type": "any"
      }
    ]
  }
  extern ifOnEdgeBounce = {
    "opcode": "motion_ifonedgebounce",
    "type": "void",
    "args": []
  }
  extern setRotationStyle = {
    "opcode": "motion_setrotationstyle",
    "type": "void",
    "args": [
      {
        "name": "STYLE",
        "type": "field",
        "menu": {
          "left-right": "left-right",
          "no-rotate": "don\'t rotate",
          "all-around": "all around"
        }
      }
    ]
  }
  extern x = {
    "opcode": "motion_xposition",
    "type": "any",
    "args": []
  }
  extern y = {
    "opcode": "motion_yposition",
    "type": "any",
    "args": []
  }
  extern direction = {
    "opcode": "motion_direction",
    "type": "any",
    "args": []
  }
}
module looks {
  extern sayForSecs = {
    "opcode": "looks_sayforsecs",
    "type": "void",
    "args": [
      {
        "name": "MESSAGE",
        "type": "any"
      },
      {
        "name": "SECS",
        "type": "any"
      }
    ]
  }
  extern say = {
    "opcode": "looks_say",
    "type": "void",
    "args": [
      {
        "name": "MESSAGE",
        "type": "any"
      }
    ]
  }
  extern thinkForSecs = {
    "opcode": "looks_thinkforsecs",
    "type": "void",
    "args": [
      {
        "name": "MESSAGE",
        "type": "any"
      },
      {
        "name": "SECS",
        "type": "any"
      }
    ]
  }
  extern think = {
    "opcode": "looks_think",
    "type": "void",
    "args": [
      {
        "name": "MESSAGE",
        "type": "any"
      }
    ]
  }
  extern switchCostume = {
    "opcode": "looks_switchcostumeto",
    "type": "void",
    "args": [
      {
        "name": "COSTUME",
        "type": "any"
      }
    ]
  }
  extern nextCostume = {
    "opcode": "looks_nextcostume",
    "type": "void",
    "args": []
  }
  extern switchBackdrop = {
    "opcode": "looks_switchbackdropto",
    "type": "void",
    "args": [
      {
        "name": "BACKDROP",
        "type": "any"
      }
    ]
  }
  extern nextBackdrop = {
    "opcode": "looks_nextbackdrop",
    "type": "void",
    "args": []
  }
  extern changeSize = {
    "opcode": "looks_changesizeby",
    "type": "void",
    "args": [
      {
        "name": "DSIZE",
        "type": "any"
      }
    ]
  }
  extern setSize = {
    "opcode": "looks_setsizeto",
    "type": "void",
    "args": [
      {
        "name": "SIZE",
        "type": "any"
      }
    ]
  }
  extern changeEffect = {
    "opcode": "looks_changeeffectby",
    "type": "void",
    "args": [
      {
        "name": "EFFECT",
        "type": "field",
        "menu": {
          "color": "COLOR",
          "fisheye": "FISHEYE",
          "whirl": "WHIRL",
          "pixelate": "PIXELATE",
          "mosaic": "MOSAIC",
          "brightness": "BRIGHTNESS",
          "ghost": "GHOST"
        }
      },
      {
        "name": "CHANGE",
        "type": "any"
      }
    ]
  }
  extern setEffect = {
    "opcode": "looks_seteffectto",
    "type": "void",
    "args": [
      {
        "name": "EFFECT",
        "type": "field",
        "menu": {
          "color": "COLOR",
          "fisheye": "FISHEYE",
          "whirl": "WHIRL",
          "pixelate": "PIXELATE",
          "mosaic": "MOSAIC",
          "brightness": "BRIGHTNESS",
          "ghost": "GHOST"
        }
      },
      {
        "name": "VALUE",
        "type": "any"
      }
    ]
  }
  extern clearEffects = {
    "opcode": "looks_cleargraphiceffects",
    "type": "void",
    "args": []
  }
  extern show = {
    "opcode": "looks_show",
    "type": "void",
    "args": []
  }
  extern hide = {
    "opcode": "looks_hide",
    "type": "void",
    "args": []
  }
  extern setLayer = {
    "opcode": "looks_gotofrontback",
    "type": "void",
    "args": [
      {
        "name": "FRONT_BACK",
        "type": "field",
        "menu": {
          "front": "front",
          "back": "back"
        }
      }
    ]
  }
  extern _changeLayer = {
    "opcode": "looks_goforwardbackwardlayers",
    "type": "void",
    "args": [
      {
        "name": "FORWARD_BACKWARD",
        "type": "field",
        "menu": {
          "forward": "forward",
          "backward": "backward"
        }
      },
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern changeLayer = {
    "opcode": "looks_goforwardbackwardlayers",
    "type": "void",
    "fields": {
      "FORWARD_BACKWARD": "forward"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern costumeName = {
    "opcode": "looks_costumenumbername",
    "type": "any",
    "fields": {
      "NUMBER_NAME": "name"
    },
    "args": []
  }
  extern costumeNumber = {
    "opcode": "looks_costumenumbername",
    "type": "any",
    "fields": {
      "NUMBER_NAME": "number"
    },
    "args": []
  }
  extern backdropName = {
    "opcode": "looks_backdropnumbername",
    "type": "any",
    "fields": {
      "NUMBER_NAME": "name"
    },
    "args": []
  }
  extern backdropNumber = {
    "opcode": "looks_backdropnumbername",
    "type": "any",
    "fields": {
      "NUMBER_NAME": "number"
    },
    "args": []
  }
  extern size = {
    "opcode": "looks_size",
    "type": "any",
    "args": []
  }
}

module sound {
  extern playSound = {
    "opcode": "sound_play",
    "type": "void",
    "args": [
      {
        "name": "SOUND_MENU",
        "type": "any"
      }
    ]
  }
  extern playSoundAwait = {
    "opcode": "sound_playuntildone",
    "type": "void",
    "args": [
      {
        "name": "SOUND_MENU",
        "type": "any"
      }
    ]
  }
  extern stopAllSounds = {
    "opcode": "sound_stopallsounds",
    "type": "void",
    "args": []
  }
  extern changeEffect = {
    "opcode": "sound_changeeffectby",
    "type": "void",
    "args": [
      {
        "name": "EFFECT",
        "type": "field",
        "menu": {
          "pitch": "PITCH",
          "pan": "PAN"
        }
      },
      {
        "name": "CHANGE",
        "type": "any"
      }
    ]
  }
  extern setEffect = {
    "opcode": "sound_seteffectto",
    "type": "void",
    "args": [
      {
        "name": "EFFECT",
        "type": "field",
        "menu": {
          "pitch": "PITCH",
          "pan": "PAN"
        }
      },
      {
        "name": "VALUE",
        "type": "any"
      }
    ]
  }
  extern clearEffects = {
    "opcode": "sound_cleareffects",
    "type": "void",
    "args": []
  }
  extern changeVolume = {
    "opcode": "sound_changevolumeby",
    "type": "void",
    "args": [
      {
        "name": "VOLUME",
        "type": "any"
      }
    ]
  }
  extern setVolume = {
    "opcode": "sound_setvolumeto",
    "type": "void",
    "args": [
      {
        "name": "VOLUME",
        "type": "any"
      }
    ]
  }
  extern volume = {
    "opcode": "sound_volume",
    "type": "any",
    "args": []
  }
}
module event {
  extern start = {
    "opcode": "event_whenflagclicked",
    "type": "hat",
    "args": []
  }
  extern keyPressed = {
    "opcode": "event_whenkeypressed",
    "type": "hat",
    "args": [
      {
        "name": "KEY_OPTION",
        "type": "field",
        "menu": {
          " ": "space",
          "up": "up arrow",
          "down": "down arrow",
          "left": "left arrow",
          "right": "right arrow",
          "": "any",
          "a": "a",
          "b": "b",
          "c": "c",
          "d": "d",
          "e": "e",
          "f": "f",
          "g": "g",
          "h": "h",
          "i": "i",
          "j": "j",
          "k": "k",
          "l": "l",
          "m": "m",
          "n": "n",
          "o": "o",
          "p": "p",
          "q": "q",
          "r": "r",
          "s": "s",
          "t": "t",
          "u": "u",
          "v": "v",
          "w": "w",
          "x": "x",
          "y": "y",
          "z": "z",
          "0": "0",
          "1": "1",
          "2": "2",
          "3": "3",
          "4": "4",
          "5": "5",
          "6": "6",
          "7": "7",
          "8": "8",
          "9": "9"
        }
      }
    ]
  }
  extern sceneStart = {
    "opcode": "event_whenbackdropswitchesto",
    "type": "hat",
    "args": [
      {
        "name": "BACKDROP",
        "type": "any"
      }
    ]
  }
  extern thisSpriteClicked = {
    "opcode": "event_whenthisspriteclicked",
    "type": "hat",
    "args": []
  }
  extern stageClicked = {
    "opcode": "event_whenstageclicked",
    "type": "hat",
    "args": []
  }
  extern onBroadcast = {
    "opcode": "event_whenbroadcastreceived",
    "type": "hat",
    "args": [
      {
        "name": "BROADCAST_OPTION",
        "type": "field",
        "menu": null
      }
    ]
  }
  extern broadcast = {
    "opcode": "event_broadcast",
    "type": "void",
    "args": [
      {
        "name": "BROADCAST_INPUT",
        "type": "any"
      }
    ]
  }
  extern broadcastAwait = {
    "opcode": "event_broadcastandwait",
    "type": "void",
    "args": [
      {
        "name": "BROADCAST_INPUT",
        "type": "any"
      }
    ]
  }
}
module control {
  extern wait = {
    "opcode": "control_wait",
    "type": "void",
    "args": [
      {
        "name": "DURATION",
        "type": "any"
      }
    ]
  }
  extern until = {
    "opcode": "control_repeat_until",
    "type": "void",
    "args": [
      {
        "name": "CONDITION",
        "type": "bool"
      },
      {
        "name": "SUBSTACK",
        "type": "substack"
      }
    ]
  }
  extern repeat = {
    "opcode": "control_repeat",
    "type": "void",
    "args": [
      {
        "name": "TIMES",
        "type": "any"
      },
      {
        "name": "SUBSTACK",
        "type": "substack"
      }
    ]
  }
  extern watch = {
    "opcode": "control_wait_until",
    "type": "void",
    "args": [
      {
        "name": "CONDITION",
        "type": "bool"
      }
    ]
  }
  extern stop = {
    "opcode": "control_stop",
    "type": "void",
    "args": [
      {
        "name": "STOP_OPTION",
        "type": "field",
        "menu": {
          "all": "all",
          "return": "this script",
          "other": "other scripts in sprite"
        }
      }
    ]
  }
  extern clone = {
    "opcode": "control_create_clone_of",
    "type": "void",
    "args": [
      {
        "name": "CLONE_OPTION",
        "type": "any"
      }
    ]
  }
  extern deleteSelf = {
    "opcode": "control_delete_this_clone",
    "type": "void",
    "args": []
  }
  extern onClone = {
    "opcode": "control_start_as_clone",
    "type": "hat",
    "args": []
  }
}
module sensing {
  // NOTE: OBJECT: _mouse_, _edge_ or sprite name
  extern touchingObject = {
    "opcode": "sensing_touchingobject",
    "type": "bool",
    "args": [
      {
        "name": "TOUCHINGOBJECTMENU",
        "type": "any"
      }
    ]
  }
  extern touchingColor = {
    "opcode": "sensing_touchingcolor",
    "type": "bool",
    "args": [
      {
        "name": "COLOR",
        "type": "any"
      }
    ]
  }
  extern colorTouchingColor = {
    "opcode": "sensing_coloristouchingcolor",
    "type": "bool",
    "args": [
      {
        "name": "COLOR1",
        "type": "any"
      },
      {
        "name": "COLOR2",
        "type": "any"
      }
    ]
  }
  // NOTE: DISTANCETOMENU: _mouse_ or sprite name
  extern distanceTo = {
    "opcode": "sensing_distanceto",
    "type": "any",
    "args": [
      {
        "name": "DISTANCETOMENU",
        "type": "any"
      }
    ]
  }
  extern ask = {
    "opcode": "sensing_askandwait",
    "type": "void",
    "args": []
  }
  extern askAnswer = {
    "opcode": "sensing_answer",
    "type": "any",
    "args": []
  }
  extern isKeyPressed = {
    "opcode": "sensing_keypressed",
    "type": "bool",
    "args": [
      {
        "name": "KEY_OPTION",
        "type": "any"
      }
    ]
  }
  extern mouseX = {
    "opcode": "sensing_mousex",
    "type": "any",
    "args": []
  }
  extern mouseY = {
    "opcode": "sensing_mousey",
    "type": "any",
    "args": []
  }
  extern mouseDown = {
    "opcode": "sensing_mousedown",
    "type": "bool",
    "args": []
  }
  extern setDragMode = {
    "opcode": "sensing_setdragmode",
    "type": "void",
    "args": [
      {
        "name": "DRAG_MODE",
        "type": "field",
        "menu": {
          "draggable": "draggable",
          "undraggable": "not draggable"
        }
      }
    ]
  }
  extern loudness = {
    "opcode": "sensing_loudness",
    "type": "any",
    "args": []
  }
  extern timer = {
    "opcode": "sensing_timer",
    "type": "any",
    "args": []
  }
  extern resetTimer = {
    "opcode": "sensing_resettimer",
    "type": "void",
    "args": []
  }
  extern of = {
    "opcode": "sensing_of",
    "type": "any",
    "args": [
      {
        "name": "OBJECT",
        "type": "any"
      },
      {
        "name": "PROPERTY",
        "type": "field",
        "menu": null
      }
    ]
  }
  extern current = {
    "opcode": "sensing_current",
    "type": "any",
    "args": [
      {
        "name": "CURRENTMENU",
        "type": "field",
        "menu": {
          "year": "year",
          "month": "month",
          "date": "date",
          "dayofweek": "day of week",
          "hour": "hour",
          "minute": "minute",
          "second": "second"
        }
      }
    ]
  }
  extern daysSince2000 = {
    "opcode": "sensing_dayssince2000",
    "type": "any",
    "args": []
  }
  extern username = {
    "opcode": "sensing_username",
    "type": "any",
    "args": []
  }
}
module math {
  extern random = {
    "opcode": "operator_random",
    "type": "any",
    "args": [
      {
        "name": "FROM",
        "type": "any"
      },
      {
        "name": "TO",
        "type": "any"
      }
    ]
  }
  extern round = {
    "opcode": "operator_round",
    "type": "any",
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  // mathop
  extern abs = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "abs"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern floor = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "floor"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern ceil = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "ceiling"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern sqrt = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "sqrt"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern sin = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "sin"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern cos = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "cos"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern tan = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "tan"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern asin = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "asin"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern acos = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "acos"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern atan = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "atan"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern ln = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "ln"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern log = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "log"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern epow = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "e ^"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
  extern tenpow = {
    "opcode": "operator_mathop",
    "type": "any",
    "fields": {
      "OPERATOR": "10 ^"
    },
    "args": [
      {
        "name": "NUM",
        "type": "any"
      }
    ]
  }
}
module pen {
  extern clear = {
    "opcode": "pen_clear",
    "type": "void",
    "args": []
  }
  extern stamp = {
    "opcode": "pen_stamp",
    "type": "void",
    "args": []
  }
  extern penDown = {
    "opcode": "pen_penDown",
    "type": "void",
    "args": []
  }
  extern penUp = {
    "opcode": "pen_penUp",
    "type": "void",
    "args": []
  }
  extern setColor = {
    "opcode": "pen_setPenColorToColor",
    "type": "void",
    "args": [
      {
        "name": "COLOR",
        "type": "any"
      }
    ]
  }
  extern setParam = {
    "opcode": "pen_setPenColorParamTo",
    "type": "void",
    "args": [
      {
        "name": "COLOR_PARAM",
        "type": "any"
      },
      {
        "name": "VALUE",
        "type": "any"
      }
    ]
  }
  extern changeParam = {
    "opcode": "pen_changePenColorParamBy",
    "type": "void",
    "args": [
      {
        "name": "COLOR_PARAM",
        "type": "any"
      },
      {
        "name": "VALUE",
        "type": "any"
      }
    ]
  }
  extern setSize = {
    "opcode": "pen_setPenSizeTo",
    "type": "void",
    "args": [
      {
        "name": "SIZE",
        "type": "any"
      }
    ]
  }
  extern changeSize = {
    "opcode": "pen_changePenSizeBy",
    "type": "void",
    "args": [
      {
        "name": "SIZE",
        "type": "any"
      }
    ]
  }
}
module translate {
  extern getTranslate = {
    "opcode": "translate_getTranslate",
    "type": "any",
    "args": [
      {
        "name": "WORDS",
        "type": "any"
      },
      {
        "name": "LANGUAGE",
        "type": "any"
      }
    ]
  }
  extern getViewerLanguage = {
    "opcode": "translate_getViewerLanguage",
    "type": "any",
    "args": []
  }
}
module tw {
  extern isTurbowarp = {
    "opcode": "argument_reporter_boolean",
    "type": "bool",
    "fields": {
      "VALUE": "is TurboWarp?"
    },
    "args": []
  }
  extern isCompiled = {
    "opcode": "argument_reporter_boolean",
    "type": "bool",
    "fields": {
      "VALUE": "is compiled?"
    },
    "args": []
  }
}
